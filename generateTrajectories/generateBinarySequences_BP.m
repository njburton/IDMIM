close all force
clear
clc

%% Create test task binInputSequence
% Create binary sequences both an ABA and a BAB, all probabilities are in
% terms of the left lever, right lever = 1 - left lever

randSeed = 100;
rng(randSeed);

numTrials = 60;

probASection1 = 0.8;
probASection2 = 0.8;

probsBSection1 = [0.5, 0.65, 0.3, 0.45, 0.75, 0.55, 0.25];
probsBSection2 = [0.25, 0.55, 0.75, 0.45, 0.3, 0.65, 0.5];
numTrialsBSection1 = [10, 5, 8, 12, 6, 11, 8]; % These must sum to numTrials
numTrialsBSection2 = [8, 11, 6, 12, 8, 5, 10]; % These must sum to numTrials


stableABASeq1 = rand(numTrials, 1) < probASection1;
stableABASeq2 = rand(numTrials, 1) < probASection2;

unstableABASeq1 = vertcat(rand(numTrialsBSection1(1), 1) < probsBSection1(1), ...
                                               rand(numTrialsBSection1(2), 1) < probsBSection1(2), ...
                                               rand(numTrialsBSection1(3), 1) < probsBSection1(3), ...
                                               rand(numTrialsBSection1(4), 1) < probsBSection1(4), ...
                                               rand(numTrialsBSection1(5), 1) < probsBSection1(5), ...
                                               rand(numTrialsBSection1(6), 1) < probsBSection1(6), ...
                                               rand(numTrialsBSection1(7), 1) < probsBSection1(7));
                                           
unstableABASeq2 = vertcat(rand(numTrialsBSection2(1), 1) < probsBSection2(1), ...
                                               rand(numTrialsBSection2(2), 1) < probsBSection2(2), ...
                                               rand(numTrialsBSection2(3), 1) < probsBSection2(3), ...
                                               rand(numTrialsBSection2(4), 1) < probsBSection2(4), ...
                                               rand(numTrialsBSection2(5), 1) < probsBSection2(5), ...
                                               rand(numTrialsBSection2(6), 1) < probsBSection2(6), ...
                                               rand(numTrialsBSection2(7), 1) < probsBSection2(7));

  
%%
% Made each of the sections now paste them together and plot the results
 
seqABALeftLever = vertcat(stableABASeq1, unstableABASeq1, stableABASeq2);
seqABARightLever = ~seqABALeftLever;
 
probSeqABA = vertcat(zeros(numTrials, 1) + probASection1, ...
                                      zeros(numTrialsBSection1(1), 1) + probsBSection1(1), ...
                                      zeros(numTrialsBSection1(2), 1) + probsBSection1(2), ...
                                      zeros(numTrialsBSection1(3), 1) + probsBSection1(3), ...
                                      zeros(numTrialsBSection1(4), 1) + probsBSection1(4), ...
                                      zeros(numTrialsBSection1(5), 1) + probsBSection1(5), ...
                                      zeros(numTrialsBSection1(6), 1) + probsBSection1(6), ...
                                      zeros(numTrialsBSection1(7), 1) + probsBSection1(7), ...
                                      zeros(numTrials, 1) + probASection2);
                                    

seqBABLeftLever = vertcat(unstableABASeq1, stableABASeq1, unstableABASeq2);
seqBABRightLever = ~seqBABLeftLever;
 
probSeqBAB = vertcat(zeros(numTrialsBSection1(1), 1) + probsBSection1(1), ...
                                      zeros(numTrialsBSection1(2), 1) + probsBSection1(2), ...
                                      zeros(numTrialsBSection1(3), 1) + probsBSection1(3), ...
                                      zeros(numTrialsBSection1(4), 1) + probsBSection1(4), ...
                                      zeros(numTrialsBSection1(5), 1) + probsBSection1(5), ...
                                      zeros(numTrialsBSection1(6), 1) + probsBSection1(6), ...
                                      zeros(numTrialsBSection1(7), 1) + probsBSection1(7), ...
                                      zeros(numTrials, 1) + probASection1, ...
                                      zeros(numTrialsBSection2(1), 1) + probsBSection2(1), ...
                                      zeros(numTrialsBSection2(2), 1) + probsBSection2(2), ...
                                      zeros(numTrialsBSection2(3), 1) + probsBSection2(3), ...
                                      zeros(numTrialsBSection2(4), 1) + probsBSection2(4), ...
                                      zeros(numTrialsBSection2(5), 1) + probsBSection2(5), ...
                                      zeros(numTrialsBSection2(6), 1) + probsBSection2(6), ...
                                      zeros(numTrialsBSection2(7), 1) + probsBSection2(7));
 
%% 
% Plot the sequences
figure;
plot(seqABALeftLever, '.', 'MarkerSize', 25); ylim([-0.1, 1.1]);
hold on;
stairs(probSeqABA, '-.', 'Color', 'r', 'LineWidth', 2);
%legend({'Rewarding Lever', 'Pr(Left lever)'});
title('ABA sequence, Left Lever = 1, Right Lever = 0', 'FontWeight', 'bold', 'FontSize', 12);
set(gcf, 'color', 'none');   
set(gca, 'color', 'none');
%xticks([0 40 80 120 160 200 240 280])
hold on;

% figure;
% plot(seqBABLeftLever, '.', 'MarkerSize', 25); ylim([-0.1, 1.1]);
% hold on;
% stairs(probSeqBAB, '-.', 'Color', 'r', 'LineWidth', 2);
% legend({'Rewarding Lever', 'Pr(Left lever)'});
% title('BAB sequence, Left Lever = 1, Right Lever = 0', 'FontWeight', 'bold', 'FontSize', 12);

% %% Write out the sequences to a .csv file
% 
% tempTable = array2table([seqABALeftLever, seqABARightLever]);
% tempTable.Properties.VariableNames = {'ABA Left Lever', 'ABA Right Lever'};
% writetable(tempTable, [pwd, filesep, 'seqABABothLevers.csv']);
%  
%  tempTable = array2table([seqBABLeftLever, seqBABRightLever]);
% tempTable.Properties.VariableNames = {'BAB Left Lever', 'BAB Right Lever'};
% writetable(tempTable, [pwd, filesep, 'seqBABBothLevers.csv']);
 
 
 
 
 
 