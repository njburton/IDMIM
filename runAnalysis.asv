function runAnalysis

%% INITIALIZE runOptions
% Main function for running the analysis of the IDMIM study
%
%    SYNTAX:        runAnalysis
%
% Original: 30-5-2023; Katharina V. Wellstein
% Amended: 23-2-2023; Nicholas Burton
% -------------------------------------------------------------------------
% Copyright (C) 2024 - need to fill in details
%
% _________________________________________________________________________
% =========================================================================

%% STARTUP

% some of these may be unnecessary, if you are running the function as a whole
close all % Close any open windows like fig windows
clc % Clear cmd window

disp('starting analysis pipeline...');
restoredefaultpath();

diaryName = ['diary_', datestr(datetime('now'))];
diary on


%% Initialise options for running this function
disp('initialising options...');
optionsFile = runOptions;

%% Get,Organize, and save data into tables
optionsFile = getData(optionsFile);
save([optionsFile.paths.projDir,'\optionsFile.mat'],"optionsFile")  %%Breakpoint here to troubleshoot

%% Simulate synthetic agends
% create agents that act like a specific model woul expect them to act and
% then fit models
% setup_simulations;
% sim_data_modelinversion;

%% Extract model based quantities
% Fit mouse choice data using the following models for comparison

%addpath(genpath(optionsFile.paths.HGFDir));
% disp('preparing to fit model to task data...');
% 
% fitModels(optionsFile);


%% Categorise mice into ExperimentalGroups
ExperimentalGroups = zeros(optionsFile.Task.nSize,2);
ExperimentalGroups(:,1) = optionsFile.Task.MouseID(:,1)

ExperimentGroupVarTypes = {'string','double'};
ExperimentGroupVarNames = {'MouseID','ExperimentGroup'};
ExperimentGroupTable = table('Size',[optionsFile.Task.nSize 2],'VariableTypes', ExperimentGroupVarTypes,'VariableNames',TaskTableVarNames);

ExperimentGroupTable.MouseID = optionsFile.Task.MouseID(:,1)

for i = 1:optionsFile.Task.nSize

    CurrentMouseID = ExperimentalGroups(1,1);
    CurrentMouseID = string(CurrentMouseID);
    EndsWithCheck = endsWith("CurrentMouseID"),"2")
    if EndsWithCheck == 1
        ExperimentGroups(i,2) = 2
    else
        ExperimentGroups(i,2) = 1
end


%% Plot parameter recovery and data plots
parameter_recovery(optionsFile);


%% Bayesian Model Comparison and Model Identifiability
% (compare different model fits to see which explains the data the best)


% % % % for matFile = file List;
% % % %     load(file)
% % % %     create table for with colums, treatmet, HGFvs.RW
% % % %         add files to tables
% % % %     heatmap table
% % % %

diary off
save(diaryName)
end
